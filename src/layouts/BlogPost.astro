---
import type { CollectionEntry } from "astro:content";
import BaseHead from "../components/BaseHead.astro";
import Header from "../components/Header.astro";
import FormattedDate from "../components/FormattedDate.astro";

type Props = CollectionEntry<"blog">["data"];

const { title, description, pubDate, updatedDate } = Astro.props;
const image = `${Astro.url}og.png`
---

<html lang="en">
  <head>
    <BaseHead title={title} description={description} />

    <meta property="og:title" content={title} />
    <meta property="og:description" content={description} />
    <meta property="og:url" content={Astro.url} />
    <meta property="og:image" content={image} />
    <meta property="og:type" content="article" />
    
    <meta name="twitter:card" content="summary_large_image" />
    <meta name="twitter:title" content={title} />
    <meta property="twitter:description" content={description} />
    <meta name="twitter:image" content={image} />


    <!-- Open Graph / Facebook -->
    <!-- <meta property="og:type" content="website" />
    <meta property="og:url" content={Astro.url} />
    <meta property="og:title" content={title} />
    <meta property="og:description" content={description} />
    <meta property="og:image" content={new URL(image, Astro.url)} /> -->

    <!-- Twitter -->
    <!-- <meta property="twitter:card" content="summary_large_image" />
    <meta property="twitter:url" content={Astro.url} />
    <meta property="twitter:title" content={title} />
    <meta property="twitter:description" content={description} />
    <meta property="twitter:image" content={new URL(image, Astro.url)} /> -->


    <style>
      :global(code) {
        background: #24292e;
        padding: 2px 4px;
      }
      :global(.astro-code) {
        line-height: 1.3;
      }
      :global(.astro-code+.astro-code) {
        margin-top: 20px;
      }
      main {
        width: calc(100% - 2em);
        width: 100%;
        margin: 0;
      }
      .prose {
        width: 60%;
        max-width: calc(100% - 2em);
        margin: auto;
        padding: 1em;

        color: rgba(255, 255, 255, 0.98);
        padding-bottom: 100px;
        word-break: break-all;

        ul,
        ol {
          padding-left: 20px;
        }
        p {
          margin: 20px 0;
        }
      }
      .title {
				font-size: 2.5rem;
				background-clip: text;
				-webkit-text-fill-color: transparent;
				background-image: linear-gradient(to right, #d3cce3, #e9e4f0);
				font-weight: 800;
				word-break: break-all;
      }
      .title h1 {
        margin: 0 0 0.5em 0;
      }
      .date {
        margin-bottom: 0.5em;
        color: rgb(var(--gray));
      }
      .last-updated-on {
        font-style: italic;
      }
      @media (max-width: 768px) {
        .prose {
          width: 100%;
        }
        .title {
          font-size: 1.5rem;
        }
        .title h1 {
          margin: 0 0 0.2em 0;
        }
        .date {
          color: rgb(var(--gray));
        }
      }
    </style>
  </head>

  <body>
    <Header />
    <main>
      <article style="height: calc(100vh - 60px); overflow: auto; display: flex; justify-content: center">
        <div class="prose">
          <div class="title">
            <h1>{title}</h1>
            <div class="date">
              <FormattedDate date={pubDate} />
              {
                updatedDate && (
                  <div class="last-updated-on">
                    Last updated on <FormattedDate date={updatedDate} />
                  </div>
                )
              }
            </div>
            <hr />
          </div>
					<div class="article-content">
						<slot />
					</div>
        </div>
      </article>
    </main>
  </body>
</html>
